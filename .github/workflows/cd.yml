name: PRISM Infrastructure CD

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Deploy to production'
        type: boolean
        default: false
        required: true

permissions:
  id-token: write
  contents: read

env:
  ARM_USE_OIDC: true

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_to_production == 'true' && 'prd' || 'dev' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Environment Variable
        id: set-env
        run: |
          ENV=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_to_production == 'true' && 'prd' || 'dev' }}
          ENV_UPPER=$(echo $ENV | tr '[:lower:]' '[:upper:]')
          echo "ENV=$ENV" >> $GITHUB_ENV
          echo "ENV_UPPER=$ENV_UPPER" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars[format('AZURE_CLIENT_ID_{0}', env.ENV_UPPER)] }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: |
          terraform -chdir=./terraform init \
            -backend-config="resource_group_name=rg-prism-cluster-mgmt" \
            -backend-config="storage_account_name=saprismclustermgmt" \
            -backend-config="container_name=${{ env.ENV }}-tfstate" \
            -backend-config="key=terraform.tfstate"
        env:
          ARM_CLIENT_ID: ${{ vars[format('AZURE_CLIENT_ID_{0}', env.ENV_UPPER)] }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./terraform
          framework: terraform
          config_file: ./checkov.yaml

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var 'environment=${{ env.ENV }}' -var 'tenant_id=${{ vars.AZURE_TENANT_ID }}' -out=plan.tfplan
        env:
          ARM_CLIENT_ID: ${{ vars[format('AZURE_CLIENT_ID_{0}', env.ENV_UPPER)] }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          ARM_USE_OIDC: true

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve plan.tfplan

        env:
          ARM_CLIENT_ID: ${{ vars[format('AZURE_CLIENT_ID_{0}', env.ENV_UPPER)] }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          ARM_USE_OIDC: true
